/*
 * RPattern.c
 *
 *  Created on: Mar 24, 2025
 *      Author: Thaweechock.M
 */
#include "RPattern.h"
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

uint8_t hold_detected = 0;
uint8_t pattern_index = 0;  // ใช้ในการเลือก pattern จาก 12 patterns
int output[3];  // เก็บ patterns ที่สุ่ม

void Modrun(int hold_detected){
    switch(hold_detected){
        case 0:
        		ReadS();
        		BlinkLED(GPIOC,off_Pin,1,2,500);
            break;
        case 1:

            break;
    }
}
void CheckS(int ch){
	if(Setpress(0) == output[0]){

	}
}
void Starttrig(){
	LED_Status(0,0,0);
	LED_Status(1,0,1);
    uint32_t current_time = HAL_GetTick();
    if (HAL_GPIO_ReadPin(GPIOC, OP1_Pin) && HAL_GPIO_ReadPin(GPIOC, OP3_Pin)) {
        if (hold_start_time == 0) {
            hold_start_time = current_time;
        }

        if (current_time - hold_start_time >= 5000 && !hold_detected) {

            hold_detected = 1;
        }
    } else {
        hold_start_time = 0;
        hold_detected = 0;
    }
}

void checkPatternMatch(int output[3]) {
    // อ่านค่าจากสวิตช์ 3 ตัว
    switchState[0] = readSwitchState(GPIO_PIN_0);  // OP1 ที่เชื่อมต่อกับ GPIOB_PIN_0
    switchState[1] = readSwitchState(GPIO_PIN_1);  // OP2 ที่เชื่อมต่อกับ GPIOB_PIN_1
    switchState[2] = readSwitchState(GPIO_PIN_2);  // OP3 ที่เชื่อมต่อกับ GPIOB_PIN_2

    // เปรียบเทียบค่าที่ได้กับ pattern ที่เลือก
    for (int i = 0; i < 3; i++) {
        // ถ้าค่าของปุ่มกดไม่ตรงกับ output
        if ((switchState[i] == GPIO_PIN_SET && output[i] == 0) || (switchState[i] == GPIO_PIN_RESET && output[i] == 1)) {
            return 0;  // ไม่ตรงกัน
        }
    }

    return 1;  // ถ้าตรงกันทั้งหมด
}


void GenerateAndPrintPattern() {
    int output[3];
    int patterns[12][3] = {
        {1, 2, 1}, {1, 2, 3}, {1, 3, 1}, {1, 3, 2},
        {2, 1, 2}, {2, 1, 3}, {2, 3, 1}, {2, 3, 2},
        {3, 1, 2}, {3, 1, 3}, {3, 2, 1}, {3, 2, 3}
    };

    srand(time(NULL));
    int index = rand() % 12;
    for (int j = 0; j < 3; j++) {
        output[j] = patterns[index][j];
    }
}

